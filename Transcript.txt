Introduction:

Hello, Welcome to the video. My Name is Akhil and in this training i am going to walk you through a tool called Git which is an essential component in software development field.
This is a quick introduction about what are the topics we are going to cover in this training.

First of all we will learn about version control system. What is a version control system? Why do we need VCS ? what are the advantages of VCS? What happens if we dont have a version control system ? Then you will know the importance of having Version control in your developing environment.becasue you cant learn git without knowing what is version control system.

Thats the basic part. Then we move to the core content of the training.

Then we learn about Git which is the most popular VCS now available. And GitLab which is a platform used to manage git. On the Git part, we are going to learn what is a repository? What are branches?what are tags? What is a commit? How do you version your files?how do you share it with other? What are git commands? What is merging ?

Ok ok at this point, youll be thinking ohh this is going to be a tough topic im not going to understand any he is saying. But truth is, its NOT! Git is so easy, even if you dont have an experience in programming,you will be able to understand what im about to explain .Dont worry you dont need to write even one line code code In this training.
I will also add demo videos in between the training so that you can try out the things with me. The PPT im using  in this training will be shared and if you have any doubts, you can contact me on acsiamail. Okey I hope you get an idea about what we are going to cover. So without further adieu, lets start 

Version Control System:

Lets Start from the beginning. Imagine that you are working on a document. You completed the work and named the document, lets say final.doc . Your manager looked upon it and told you to add some changes. You come back, make the changes and name the file as final_rev2.doc . you go back to manager and he says “Ok it would be better if you add so and so in the beginning”. Again you come back. Make changes and present final_rev2_correction.doc. This is it! This is the final final one. Manager looks at it then says “This is Good. But………………..” . and the cycle continues. Finally you end up in many copies of the file in which you dont even know what changes you made. it seems ridiculous to have multiple nearly-identical versions of the same document.

Another situation is created a wonderful work after alot og hardwork and then one day your system gets corrupted and the file you have been working gets deleted. You dont have any back up or anything. What will you do? Start from the beginning again right?.

We’ve all been in this situation before. On the first case, Some word processors let us deal with this a little better, such as Microsoft Word’s “Track Changes” or Google Docs’ version history. But when it comes to software development, its complex codes and stuffs right? 
Software development includes the continuous process of modifying programs. So you will need something to keep track of all your changes. This is where Version control system comes in. Version control system or VCS is a tool which manages your changes. Its the management of changes to documents, programs, etc. these changes are usually called versions. It helps developers to store different versions of software safely and in an organized manner. I shall explain it with this example. You are working on a website. You have an index.html file.on the first day, you make some changes in the index.html file. What version control does is, along with the new file, it also saves metadata about what is the change you made and makes it as a “version”. Two days later you modify the webpage. Adds a new file. This also gets saved and as the next version. Its not over yet. You have more modifications on index.html. So you modify the file. And it gets saved as version3. These metadata or versions are the basic thing that help you keep track of the project and backup these changes. It will not create multiple files for multiple modifications. So after a while if you ever want to view the change you made may be two weeks ago, you can come back to that version so easily.With this, a Software Engineer can quickly identify which version needs to be modified and what commits had been done previously and should be done.

With version control system. You will not encounter the troubles and struggles i explained few moments ago.

Advantages of Version Control System:

I think now you have a small idea about what version control system is. Now lets talk about advantages of having version control system. Infact Version control system is a great friend of developer.Heres why:

Storing Version/ traceability: 
Tracking changes is the main advantage of version control system.Version control can be an excellent help for emergency hot-fixes, routine maintenance, upgrades, and new features with potentially overlapping development timeframes.
When you need to troubleshoot an issue, you can easily access and compare the last working file with the faulty file, and decrease the time spent identifying the cause of an issue.
You can restore older versions of a file (or even the whole project) effectively through the use of version control systems. You can simply undo every changes you have done in just a few clicks.

Backup:
Snapshots of all versions are properly documented and stored correctly.When you are working in a collaborative project. even if your local project gets currepted or get deleted, you will always have backup in the central server.and even if the central server goes down, we can easilt retrieve everything from the last backup.

Collaboration:
As you know a software development project consists of many developers and managers. Programmers and developers can easily collaborate on a project through the version control system. Everyone can access the database simultaneously to view previous versions. It will be easier for them to work simultaneously as a team regardless of their location.That means multipile people can work on a same file at same time.Platforms like GitLab or GitHub is used for this.Programmers can also review and get help from others.

Git 
You have an idea about Version control. Lets get into the main part of the training. That is a tool called Git. Git is a free and opensource distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git is the most populat version control tool available right now. Companies like Google, android, facebook, microsoft,netflix and more use Git for managing their source code.Git has every feature and advantages i mentioned in the previous videos. Now lets work with Git. First we need to install git. I will describe installation steps shortly. One thing you can do is, you can install it with me. Follow the steps i do .After that i will demonstrate some git and gitlab operations. I recommend you to follow with me. Pause the video whenever you want. If you do the things with me during the training, youll get more understanding about what im saying. Lets start

Installing Git in Ubuntu/Linux:

Installing git in Ubunut or linux is a very easy process.Open the terminal. First lets update the package information using the command sudo apt-get update. Here i am not using sudo because im running these commands as a root user. Once it is done, install git using the command sudo apt-get install git-core. then type yes. and thats it. Git is installed on to your system. To verify if it is installed or not, just run the command git --version. It will show version of git currenlty installed on your machine. After installing git, configure your username and email.It is a good idea to setup your user for git now, to prevent any commit errors later

Git Tutorial concepts-1
Repository (Crating a local repository)
When you are using Git, youll use the word repository or repo most times. repository is nothing but the  project folder where your code resides.But its not just a folder. Its a git repository.Every change you do will be tracked inside this git repository. Let me explain. Now i want to create a text file and track changes of it. i create a folder called simple-git-demo. i go inside the folder and its empty.Then i create a file colors.txt and lists down some colour. lets say Red Black Green Blue and White . I saved this file. So now my folder has a file called colors.txt.This is just a folder. I want to track all the changes im doing in this folder. so i have to make this folder a git repository. for doing that i use the command git init.Now if i check for the contents, you can see that a .git folder is present there. Git tracks all your changes in this .git folder.You can say that this .git folder is your git repository. If you delete this folder, then it will become an ordinary folder. changes will not be tracked in here.

